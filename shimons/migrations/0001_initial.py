# Generated by Django 2.0 on 2018-01-05 12:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('education', models.CharField(max_length=50)),
                ('last_name', models.CharField(db_column='family', max_length=50)),
                ('field', models.CharField(max_length=50)),
                ('first_name', models.CharField(db_column='name', max_length=50)),
                ('email', models.CharField(db_column='official_email', max_length=50, unique=True)),
                ('university_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='DashboardPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('subtitle', models.CharField(max_length=256)),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1)),
            ],
            options={
                'db_table': 'dashbord_posts',
            },
        ),
        migrations.CreateModel(
            name='DetectionAlgorithm',
            fields=[
                ('algorithm_id', models.AutoField(primary_key=True, serialize=False)),
                ('jar_path', models.CharField(blank=True, max_length=255, null=True)),
                ('main_jarfile', models.CharField(db_column='main_jarFile', max_length=255)),
                ('src_path', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'detection_algorithm',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'field',
            },
        ),
        migrations.CreateModel(
            name='FinalResult',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('fn_avg', models.FloatField(db_column='FN_avg')),
                ('fp_avg', models.FloatField(db_column='FP_avg')),
                ('tn_avg', models.FloatField(db_column='TN_avg')),
                ('tp_avg', models.FloatField(db_column='TP_avg')),
                ('execution_times', models.IntegerField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'db_table': 'final_result',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
                ('subtitle', models.CharField(max_length=256)),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(auto_now=True, null=True)),
                ('date_modified', models.DateTimeField(null=True)),
                ('status', models.SmallIntegerField(blank=True, default=1)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(max_length=255, primary_key=True, serialize=False)),
                ('request_date', models.DateField(blank=True, null=True)),
                ('request_exe_status', models.CharField(max_length=50)),
                ('system_exe_status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'request',
            },
        ),
        migrations.CreateModel(
            name='RequestAttachPattern',
            fields=[
                ('attached_id', models.AutoField(primary_key=True, serialize=False)),
                ('patterns_dir', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'request_attach_pattern',
            },
        ),
        migrations.CreateModel(
            name='RequestSelectPattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'request_select_pattern',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
                ('workspace_dir', models.CharField(db_column='workSpace_dir', max_length=255)),
            ],
            options={
                'db_table': 'system_config',
            },
        ),
        migrations.CreateModel(
            name='SystemPatterns',
            fields=[
                ('pattern_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('patterns_dir', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'system_patterns',
            },
        ),
        migrations.CreateModel(
            name='TagetCode',
            fields=[
                ('targetcode_id', models.CharField(db_column='targetCode_id', max_length=255, primary_key=True, serialize=False)),
                ('classdiagram_path', models.CharField(blank=True, db_column='classDiagram_path', max_length=255, null=True)),
                ('patternsinfo_path', models.CharField(blank=True, db_column='patternsInfo_path', max_length=255, null=True)),
                ('targetcode_path', models.CharField(blank=True, db_column='targetCode_path', max_length=255, null=True)),
            ],
            options={
                'db_table': 'taget_code',
            },
        ),
        migrations.CreateModel(
            name='TargetCodeConfig',
            fields=[
                ('complexity_id', models.AutoField(primary_key=True, serialize=False)),
                ('mupi', models.IntegerField(db_column='MUPI')),
                ('complexity_level', models.CharField(max_length=255)),
                ('concrete_rate', models.FloatField()),
                ('execution_times', models.IntegerField()),
                ('interface_rate', models.FloatField()),
                ('max_association_rate', models.FloatField()),
                ('max_class_rate', models.IntegerField()),
                ('max_dependency_rate', models.FloatField()),
                ('max_inheritance_rate', models.FloatField()),
                ('max_realization_rete', models.FloatField()),
                ('max_sparcity_rate', models.FloatField()),
                ('max_superclass_rate', models.FloatField(db_column='max_superClass_rate')),
                ('status', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'target_code_config',
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('fn', models.FloatField(db_column='FN')),
                ('fp', models.FloatField(db_column='FP')),
                ('tn', models.FloatField(db_column='TN')),
                ('tp', models.FloatField(db_column='TP')),
                ('analysisresult_path', models.CharField(blank=True, db_column='analysisResult_path', max_length=255, null=True)),
                ('detectionresult_path', models.CharField(blank=True, db_column='detectionResult_path', max_length=255, null=True)),
                ('execution_status', models.CharField(max_length=255)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='shimons.Request')),
            ],
            options={
                'db_table': 'analysis_result',
            },
        ),
        migrations.AddField(
            model_name='tagetcode',
            name='complexity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.TargetCodeConfig'),
        ),
        migrations.AddField(
            model_name='requestselectpattern',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.Request'),
        ),
        migrations.AddField(
            model_name='requestselectpattern',
            name='system_pattern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.SystemPatterns'),
        ),
        migrations.AddField(
            model_name='requestattachpattern',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.Request'),
        ),
        migrations.AddField(
            model_name='request',
            name='config',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.SystemConfig'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='finalresult',
            name='request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.Request'),
        ),
        migrations.AddField(
            model_name='detectionalgorithm',
            name='request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.Request'),
        ),
        migrations.AddField(
            model_name='analysisresult',
            name='targetcode',
            field=models.ForeignKey(db_column='targetCode_id', on_delete=django.db.models.deletion.DO_NOTHING, to='shimons.TagetCode'),
        ),
        migrations.AlterUniqueTogether(
            name='analysisresult',
            unique_together={('request', 'targetcode')},
        ),
    ]
